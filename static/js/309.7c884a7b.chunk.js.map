{"version":3,"file":"static/js/309.7c884a7b.chunk.js","mappings":"sQACA,IAAMA,EAAW,8BAEXC,EAAU,CACdC,OAAQ,mBACRC,cACE,8NAGG,SAASC,IACd,OAAOC,MAAM,GAADC,OAAIN,EAAQ,uCAAuC,CAC7DO,OAAQ,MACRN,QAAAA,IACCO,MAAK,SAAAC,GACN,IAAKA,EAAKC,GACR,MAAM,IAAIC,MAAMF,EAAKG,QAEvB,OAAOH,EAAKI,MACd,GACF,CAEO,SAASC,EAAmBC,GACjC,OAAOV,MAAM,GAADC,OAAIN,EAAQ,YAAAM,OAAWS,EAAO,mBAAmB,CAC3DR,OAAQ,MACRN,QAAAA,IACCO,MAAK,SAAAC,GACN,IAAKA,EAAKC,GACR,MAAM,IAAIC,MAAMF,EAAKG,QAEvB,OAAOH,EAAKI,MACd,GACF,CAEO,SAASG,EAAmBD,GACjC,OAAOV,MAAM,GAADC,OAAIN,EAAQ,YAAAM,OAAWS,EAAO,2BAA2B,CACnER,OAAQ,MACRN,QAAAA,IACCO,MAAK,SAAAC,GACN,IAAKA,EAAKC,GACR,MAAM,IAAIC,MAAMF,EAAKG,QAEvB,OAAOH,EAAKI,MACd,GACF,CAEO,SAASI,EAAmBF,GACjC,OAAOV,MAAM,GAADC,OAAIN,EAAQ,YAAAM,OAAWS,EAAO,kCAAkC,CAC1ER,OAAQ,MACRN,QAAAA,IACCO,MAAK,SAAAC,GACN,IAAKA,EAAKC,GACR,MAAM,IAAIC,MAAMF,EAAKG,QAEvB,OAAOH,EAAKI,MACd,GACF,CAEO,SAASK,EAAeC,GAC7B,OAAOd,MAAM,GAADC,OACPN,EAAQ,yBAAAM,OAAwBa,EAAK,8CACxC,CACEZ,OAAQ,MACRN,QAAAA,IAEFO,MAAK,SAAAC,GACL,IAAKA,EAAKC,GACR,MAAM,IAAIC,MAAMF,EAAKG,QAEvB,OAAOH,EAAKI,MACd,GACF,C,8EC1BA,UAxCgB,WACd,IAAQE,GAAYK,EAAAA,EAAAA,MAAZL,QACRM,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAA4BL,EAAAA,EAAAA,UAAS,QAAOM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCf,EAAMgB,EAAA,GAAEC,EAASD,EAAA,GAiBxB,OAfAE,EAAAA,EAAAA,YAAU,WACHf,IACLc,EAAU,YACVZ,EAAAA,EAAAA,IAAmBF,GAChBP,MAAK,SAAAuB,GACJF,EAAU,YACVH,EAAWK,EAASC,SACpBC,QAAQC,IAAI,UAAWH,EACzB,IACCI,OAAM,SAAAC,GACLH,QAAQG,MAAM,wCAAWA,GACzBP,EAAU,WACZ,IACJ,GAAG,CAACd,IAGiB,IAAnBU,EAAQY,QACI,aAAXzB,GAAoC,aAAXA,GAM1B0B,EAAAA,EAAAA,KAAA,MAAAC,SACGd,EAAQe,KAAI,SAAAC,GACX,OACEC,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EACEG,EAAAA,EAAAA,MAAA,KAAAH,SAAA,CAAG,WAASE,EAAKE,WACjBL,EAAAA,EAAAA,KAAA,KAAAC,SAAIE,EAAKG,YAFFH,EAAKI,GAKlB,OAZKP,EAAAA,EAAAA,KAAA,KAAAC,SAAG,4CAed,C","sources":["components/api.js","pages/reviews/Reviews.jsx"],"sourcesContent":["// const API_KEY = 'cf9622ae437e8b15d1420bba018df313';\nconst BASE_URL = 'https://api.themoviedb.org/';\n\nconst headers = {\n  accept: 'application/json',\n  Authorization:\n    'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJjZjk2MjJhZTQzN2U4YjE1ZDE0MjBiYmEwMThkZjMxMyIsInN1YiI6IjY0ZDVmYzc4ZGI0ZWQ2MDExYzRiYTcwMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Y_orMpemfH91hpKs_ou-jpluJjSPnErJapPgiAuLRlU',\n};\n\nexport function apiGetTrendingMovies() {\n  return fetch(`${BASE_URL}3/trending/movie/day?language=en-US`, {\n    method: 'GET',\n    headers,\n  }).then(data => {\n    if (!data.ok) {\n      throw new Error(data.status);\n    }\n    return data.json();\n  });\n}\n\nexport function apiGetMovieDetails(movieId) {\n  return fetch(`${BASE_URL}3/movie/${movieId}?language=en-US`, {\n    method: 'GET',\n    headers,\n  }).then(data => {\n    if (!data.ok) {\n      throw new Error(data.status);\n    }\n    return data.json();\n  });\n}\n\nexport function apiGetMovieCredits(movieId) {\n  return fetch(`${BASE_URL}3/movie/${movieId}/credits?language=en-US`, {\n    method: 'GET',\n    headers,\n  }).then(data => {\n    if (!data.ok) {\n      throw new Error(data.status);\n    }\n    return data.json();\n  });\n}\n\nexport function apiGetMovieReviews(movieId) {\n  return fetch(`${BASE_URL}3/movie/${movieId}/reviews?language=en-US&page=1`, {\n    method: 'GET',\n    headers,\n  }).then(data => {\n    if (!data.ok) {\n      throw new Error(data.status);\n    }\n    return data.json();\n  });\n}\n\nexport function apiSearchMovie(query) {\n  return fetch(\n    `${BASE_URL}3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n    {\n      method: 'GET',\n      headers,\n    }\n  ).then(data => {\n    if (!data.ok) {\n      throw new Error(data.status);\n    }\n    return data.json();\n  });\n}\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { apiGetMovieReviews } from 'components/api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [status, setStatus] = useState('idle');\n\n  useEffect(() => {\n    if (!movieId) return;\n    setStatus('pending');\n    apiGetMovieReviews(movieId)\n      .then(response => {\n        setStatus('resolved');\n        setReviews(response.results);\n        console.log('reviews', response);\n      })\n      .catch(error => {\n        console.error('Ошибка:', error);\n        setStatus('rejected');\n      });\n  }, [movieId]);\n\n  if (\n    reviews.length === 0 &&\n    (status === 'rejected' || status === 'resolved')\n  ) {\n    return <p>We don't have any reviews for this movie</p>;\n  }\n\n  return (\n    <ul>\n      {reviews.map(item => {\n        return (\n          <li key={item.id}>\n            <b>Author: {item.author}</b>\n            <p>{item.content}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\nexport default Reviews;\n"],"names":["BASE_URL","headers","accept","Authorization","apiGetTrendingMovies","fetch","concat","method","then","data","ok","Error","status","json","apiGetMovieDetails","movieId","apiGetMovieCredits","apiGetMovieReviews","apiSearchMovie","query","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","setStatus","useEffect","response","results","console","log","catch","error","length","_jsx","children","map","item","_jsxs","author","content","id"],"sourceRoot":""}